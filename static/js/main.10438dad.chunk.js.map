{"version":3,"sources":["components/Navbar/styles.js","components/Navbar/index.js","pages/Welcome/styles.js","config/gameSettings.js","pages/Welcome/index.js","components/Card/styles.js","components/Card/index.js","pages/Game/hocs/GameLogic.js","services/HeroApi.js","util/shuffle.js","pages/Game/hocs/HeroesLoader.js","pages/Game/hocs/Timer.js","util/compose.js","pages/Game/styles.js","pages/Game/index.js","pages/Results/styles.js","pages/Results/index.js","pages/Results/hocs/Data.js","routes.js","styles/global.js","App.js","index.js"],"names":["Container","styled","nav","Score","div","CurrentCard","LeftScore","RightScore","Title","h1","Navbar","title","inGame","score","timeRemaining","cardIndex","totalCardNumber","defaultProps","LinkButton","Link","numberOfCards","gameTime","Welcome","GameSettings","to","size","ImageBox","ButtonBox","Button","button","Card","hero","handleSelectName","image","options","src","alt","map","opt","key","type","onClick","withGameLogic","Component","props","heroesList","useState","currentCard","setCurrentCard","setScore","correctAnswers","setCorrectAnswers","history","useHistory","useEffect","push","length","selectedName","name","HeroApi","axios","create","baseURL","shuffle","__array","array","currentIndex","randomIndex","Math","floor","random","temporaryValue","withHeroesLoader","loading","setLoading","setHeroesList","generateCardsFromHeroes","heroes","getDiferentName","index","id","slice","name2","name1","images","sm","a","get","data","console","error","LoadHeroes","withTimer","setTimeRemaining","intervalId","setInterval","clearInterval","compose","fns","reduce","f","g","LoadingScreen","ScoreContainer","useLocation","state","totalScore","round","Number","maximumNumberOfCards","Routes","basename","process","path","exact","component","Game","Results","createGlobalStyle","App","ReactDOM","render","document","getElementById"],"mappings":"6xCAEO,IAAMA,EAAYC,IAAOC,IAAV,KAqBTC,EAAQF,IAAOG,IAAV,KAcLC,EAAcJ,YAAOE,EAAPF,CAAH,KAIXK,EAAYL,YAAOE,EAAPF,CAAH,KAITM,EAAaN,YAAOE,EAAPF,CAAH,KAIVO,EAAQP,IAAOQ,GAAV,KC3ClB,SAASC,EAAT,GAOI,IANFC,EAMC,EANDA,MACAC,EAKC,EALDA,OACAC,EAIC,EAJDA,MACAC,EAGC,EAHDA,cACAC,EAEC,EAFDA,UACAC,EACC,EADDA,gBAEA,OACE,kBAAChB,EAAD,KACE,4BACE,4BACGY,GACC,kBAACP,EAAD,KACGU,EADH,IACeC,IAInB,4BACE,kBAACR,EAAD,KAAQG,IAEV,4BACGC,GACC,oCACE,kBAACN,EAAD,KACE,kBAAC,IAAD,MACA,8BAAOO,IAET,kBAACN,EAAD,KACE,kBAAC,IAAD,MACA,8BAAOO,QAmBvBJ,EAAOO,aAAe,CACpBL,QAAQ,EACRC,MAAO,EACPC,cAAe,EACfC,UAAW,EACXC,gBAAiB,GAGJN,Q,i/BC5DR,IAAMV,EAAYC,IAAOG,IAAV,KA+BTc,EAAajB,YAAOkB,IAAPlB,CAAH,KClCR,GACbmB,cAAe,GACfC,SAAU,ICMG,SAASC,IACtB,OACE,oCACE,kBAAC,EAAD,CAAQX,MAAM,kBACd,kBAAC,EAAD,KACE,wDACA,2JAIA,uCACYY,EAAaF,SADzB,gCACgE,IAC7DE,EAAaH,cAFhB,0FAKA,2DACA,kBAACF,EAAD,CAAYM,GAAG,QACb,kBAAC,IAAD,CAAQC,KAAM,KADhB,iB,gjCCtBD,IAAMzB,EAAYC,IAAOG,IAAV,KAUTsB,EAAWzB,IAAOG,IAAV,KAcRuB,EAAY1B,IAAOG,IAAV,KAWTwB,EAAS3B,IAAO4B,OAAV,KCAJC,MAhCf,YAA2C,IAA3BC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,iBACZC,EAAmBF,EAAnBE,MAAOC,EAAYH,EAAZG,QACf,OACE,kBAAC,EAAD,KACE,kBAACR,EAAD,KACE,yBAAKS,IAAKF,EAAOG,IAAI,UAEvB,kBAACT,EAAD,KACGO,EAAQG,KAAI,SAAAC,GAAG,OACd,kBAACV,EAAD,CACEW,IAAKD,EACLE,KAAK,SACLC,QAAS,WACPT,EAAiBM,KAGlBA,S,OCfAI,EAAgB,SAAAC,GAgD3B,OA/CsB,SAAAC,GAAU,IACtB9B,EAA8B8B,EAA9B9B,cAAe+B,EAAeD,EAAfC,WADM,EAESC,mBAAS,GAFlB,mBAEtBC,EAFsB,KAETC,EAFS,OAGHF,mBAAS,GAHN,mBAGtBjC,EAHsB,KAGfoC,EAHe,OAIeH,mBAAS,GAJxB,mBAItBI,EAJsB,KAINC,EAJM,KAKvBC,EAAUC,cAEhBC,qBAAU,YACJP,IAAgBxB,EAAaH,eAAiBN,GAAiB,IACjEsC,EAAQG,KAAK,WAAY,CAAE1C,QAAOqC,iBAAgBpC,oBAEnD,CAACiC,EAAajC,EAAeD,EAAOqC,EAAgBE,IAUvD,OACEP,EAAWW,OAAS,GACpBT,EAAcxB,EAAaH,eACzB,kBAACuB,EAAD,iBAEMC,EAFN,CAGEZ,iBAdmB,SAAAyB,GACnBA,IAAiBZ,EAAWE,GAAaW,OAC3CT,EAASpC,EAAQ,IACjBsC,EAAkBD,EAAiB,IAErCF,EAAeD,EAAc,IAUzBA,YAAaF,EAAWE,GACxBhC,UAAWgC,EAAc,EACzB/B,gBAAiBO,EAAaH,cAC9BP,MAAOA,O,iCChCF8C,E,OAJCC,EAAMC,OAAO,CAC3BC,QAAS,2D,QCaIC,MAhBf,SAAiBC,GAIf,IAHA,IAAMC,EAAK,YAAOD,GACdE,EAAeD,EAAMT,OAED,IAAjBU,GAAoB,CACzB,IAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,GAGzCK,EAAiBN,EAFvBC,GAAgB,GAGhBD,EAAMC,GAAgBD,EAAME,GAC5BF,EAAME,GAAeI,EAGvB,OAAON,GCPIO,EAAmB,SAAA7B,GAwD9B,OAvDyB,SAAAC,GAAU,IAAD,EACFE,oBAAS,GADP,mBACzB2B,EADyB,KAChBC,EADgB,OAEI5B,mBAAS,IAFb,mBAEzBD,EAFyB,KAEb8B,EAFa,KAI1BC,EAA0B,SAAAC,GAE9B,IAAMC,EAAkB,SAAlBA,EAAmBC,EAAOC,GAC9B,KAAOH,EAAOE,GAAOC,KAAOA,GAC1B,OAAOF,EAAgBV,KAAKC,MAAMD,KAAKE,SAAWO,EAAOrB,QAASwB,GAEpE,OAAOH,EAAOE,GAAOrB,MAGvB,OAAOmB,EAAOI,MAAM,EAAG1D,EAAaH,eAAeiB,KAAI,SAACN,EAAMgD,GAC5D,IACIG,EADEC,EAAQL,EAAgBC,EAAOhD,EAAKiD,IAE1C,GACEE,EAAQJ,EAAgBC,EAAOhD,EAAKiD,UAC7BE,IAAUC,GAEnB,MAAO,CACLH,GAAIjD,EAAKiD,GACTtB,KAAM3B,EAAK2B,KACXxB,QAAS6B,EAAQ,CAAChC,EAAK2B,KAAMyB,EAAOD,IACpCjD,MAAOF,EAAKqD,OAAOC,QAsBzB,OAjBA/B,qBAAU,YACQ,uCAAG,gCAAAgC,EAAA,6DACjBZ,GAAW,GADM,kBAGQf,EAAQ4B,IAAI,aAHpB,gBAGPC,EAHO,EAGPA,KACFX,EAASD,EAAwBb,EAAQyB,IAC/Cb,EAAcE,GACdH,GAAW,GANI,kDAQfA,GAAW,GACXC,EAAc,IACdc,QAAQC,MAAR,MAVe,0DAAH,qDAahBC,KACC,IAGD,kBAAChD,EAAD,iBAEMC,EAFN,CAGE6B,QAASA,EACT5B,WAAYA,OCtDP+C,EAAY,SAAAjD,GAgBvB,OAfkB,SAAAC,GAAU,IAAD,EACiBE,mBAASvB,EAAaF,UADvC,mBAClBP,EADkB,KACH+E,EADG,KAYzB,OATAvC,qBAAU,WACR,IAAMwC,EAAaC,aAAY,WAC7BF,EAAiB/E,EAAgB,KAChC,KAEH,OAAO,kBAAMkF,cAAcF,MAC1B,CAAChF,IAGG,kBAAC6B,EAAD,iBAAeC,EAAf,CAAsB9B,cAAeA,OCfjCmF,EAFC,sCAAIC,EAAJ,yBAAIA,EAAJ,uBAAYA,EAAIC,QAAO,SAACC,EAAGC,GAAJ,OAAU,kBAAaD,EAAEC,EAAC,WAAD,mB,oiBCEzD,IAAMrG,GAAYC,IAAOG,IAAV,MAiBTkG,GAAgBrG,IAAOG,IAAV,KCwCX6F,SAAQL,EAAWpB,EAAkB9B,EAArCuD,EA9Cf,YAQI,IAPFxB,EAOC,EAPDA,QACA3D,EAMC,EANDA,cACAD,EAKC,EALDA,MACAkC,EAIC,EAJDA,YACAf,EAGC,EAHDA,iBACAjB,EAEC,EAFDA,UACAC,EACC,EADDA,gBAEA,OACE,oCACE,kBAAC,EAAD,CACEL,MAAM,gBACNC,QAAM,EACNG,UAAWA,EACXC,gBAAiBA,EACjBH,MAAOA,EACPC,cAAeA,IAEjB,kBAAC,GAAD,KACG2D,GACC,kBAAC6B,GAAD,KACE,4CAGF7B,GACA,kBAAC,EAAD,CAAM1C,KAAMgB,EAAaf,iBAAkBA,S,ijDCpC9C,IAAMhC,GAAYC,IAAOG,IAAV,MA0BTmG,GAAiBtG,IAAOG,IAAV,MAMdD,GAAQF,IAAOG,IAAV,MAgCLc,GAAajB,YAAOkB,IAAPlB,CAAH,MCTRgG,UCrDS,SAAAtD,GAoBtB,OAnBiB,SAAAC,GACf,IADwB,EACP4D,cACyCC,MAAlD5F,EAFgB,EAEhBA,MAAOqC,EAFS,EAETA,eAAgBpC,EAFP,EAEOA,cACzB4F,EAAatC,KAAKuC,MACtBC,OAAO/F,GACL+F,OAAO9F,IAAkBoC,EAAiB3B,EAAaH,gBAG3D,OACE,kBAACuB,EAAD,iBAEMC,EAFN,CAGE8D,WAAYA,EACZ5F,cAAeA,EACfoC,eAAgBA,EAChB2D,qBAAsBtF,EAAaH,oBDqC5B6E,EAhDf,YAKI,IAJFS,EAIC,EAJDA,WACA5F,EAGC,EAHDA,cACAoC,EAEC,EAFDA,eACA2D,EACC,EADDA,qBAEA,OACE,oCACE,kBAAC,EAAD,CAAQlG,MAAM,YACd,kBAAC,GAAD,KACE,gDACA,uCACWuC,EADX,WACmC2D,EADnC,kBAGA,kBAACN,GAAD,KACE,kBAAC,GAAD,KACE,kBAAC,IAAD,CAAS9E,KAAM,KACf,6BACE,8BAAOiF,GACP,4CAGJ,kBAAC,GAAD,KACE,kBAAC,IAAD,CAASjF,KAAM,KACf,6BACE,8BACGX,EADH,IACkB,sCAElB,gDAIN,kBAAC,GAAD,CAAYU,GAAG,QACb,kBAAC,IAAD,CAAQC,KAAM,KADhB,sBEtBOqF,OAZf,WACE,OACE,kBAAC,IAAD,CAAeC,SAAUC,kBACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW7F,IACjC,kBAAC,IAAD,CAAO2F,KAAK,QAAQE,UAAWC,KAC/B,kBAAC,IAAD,CAAOH,KAAK,WAAWE,UAAWE,Q,+nBCZ3BC,mBAAf,MCYeC,OATf,WACE,OACE,oCACE,kBAAC,GAAD,MACA,kBAAC,GAAD,QCJNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.10438dad.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.nav`\n  height: 59px;\n  width: 100%;\n  background: #000;\n  color: #fff;\n\n  ul {\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n\n    li {\n      width: 33%;\n      display: flex;\n      justify-content: center;\n      margin: 0 20px;\n    }\n  }\n`;\n\nexport const Score = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 35px;\n  width: 75px;\n  padding: 10px;\n  background: hsla(0, 0%, 100%, 0.15);\n\n  span {\n    margin-left: 10px;\n  }\n`;\n\nexport const CurrentCard = styled(Score)`\n  border-radius: 8px;\n`;\n\nexport const LeftScore = styled(Score)`\n  border-radius: 8px 0 0 8px;\n  margin-right: 1px;\n`;\nexport const RightScore = styled(Score)`\n  border-radius: 0 8px 8px 0;\n`;\n\nexport const Title = styled.h1`\n  text-align: center;\n  width: 100%;\n`;\n\nexport default {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaMedal, FaClock } from 'react-icons/fa';\n\nimport { Container, CurrentCard, LeftScore, RightScore, Title } from './styles';\n\nfunction Navbar({\n  title,\n  inGame,\n  score,\n  timeRemaining,\n  cardIndex,\n  totalCardNumber,\n}) {\n  return (\n    <Container>\n      <ul>\n        <li>\n          {inGame && (\n            <CurrentCard>\n              {cardIndex}/{totalCardNumber}\n            </CurrentCard>\n          )}\n        </li>\n        <li>\n          <Title>{title}</Title>\n        </li>\n        <li>\n          {inGame && (\n            <>\n              <LeftScore>\n                <FaMedal />\n                <span>{score}</span>\n              </LeftScore>\n              <RightScore>\n                <FaClock />\n                <span>{timeRemaining}</span>\n              </RightScore>\n            </>\n          )}\n        </li>\n      </ul>\n    </Container>\n  );\n}\n\nNavbar.propTypes = {\n  title: PropTypes.string.isRequired,\n  inGame: PropTypes.bool,\n  score: PropTypes.number,\n  cardIndex: PropTypes.number,\n  totalCardNumber: PropTypes.number,\n  timeRemaining: PropTypes.number,\n};\n\nNavbar.defaultProps = {\n  inGame: false,\n  score: 0,\n  timeRemaining: 0,\n  cardIndex: 1,\n  totalCardNumber: 5,\n};\n\nexport default Navbar;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  margin: 10px;\n  border-radius: 10px;\n  background: rgba(9, 12, 47, 1);\n  background: linear-gradient(\n    135deg,\n    rgba(9, 12, 47, 1) 0%,\n    rgba(3, 54, 54, 1) 100%\n  );\n\n  h1 {\n    width: 100%;\n    text-align: center;\n    margin-bottom: 15px;\n  }\n\n  p {\n    margin-bottom: 15px;\n    width: 100%;\n    max-width: 600px;\n    font-size: 20px;\n    text-align: center;\n  }\n`;\n\nexport const LinkButton = styled(Link)`\n  width: 200px;\n  height: 60px;\n  margin-top: 15px;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  box-shadow: 0px 0px 13px 0px rgba(224, 224, 224, 1);\n\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n\n  img,\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nexport default {};\n","export default {\n  numberOfCards: 15, // Number of cards displayed to the player\n  gameTime: 60, // Game maximum time in seconds\n};\n","import React from 'react';\nimport { FaPlay } from 'react-icons/fa';\n\nimport Navbar from '../../components/Navbar';\nimport { Container, LinkButton } from './styles';\n\nimport GameSettings from '../../config/gameSettings';\n\nexport default function Welcome() {\n  return (\n    <>\n      <Navbar title=\"Master Heroes\" />\n      <Container>\n        <h1>Welcome to Master Heroes</h1>\n        <p>\n          This is a simple guess game, for each image you have three name\n          options, select the name of the hero in the image and score.\n        </p>\n        <p>\n          You have {GameSettings.gameTime} seconds to guess the name of{' '}\n          {GameSettings.numberOfCards} heroes, after answering all the heros,\n          the remaining time will be converted in points\n        </p>\n        <p>Can you guess al the heroes?</p>\n        <LinkButton to=\"game\">\n          <FaPlay size={20} />\n          Start Game!\n        </LinkButton>\n      </Container>\n    </>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n  max-width: 450px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const ImageBox = styled.div`\n  flex: 1;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 75%;\n  height: 50%;\n\n  img {\n    border-radius: 8px;\n    height: 75%;\n  }\n`;\n\nexport const ButtonBox = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 50%;\n  padding: 0 30px;\n`;\n\nexport const Button = styled.button`\n  flex: 1;\n  margin: 5px;\n  width: 100%;\n  max-width: 300px;\n  height: 100px;\n  background: #2f6dae;\n  color: #fff;\n  font-size: 24px;\n  font-weight: bold;\n  border: none;\n  border-radius: 8px;\n  box-shadow: 0px 0px 13px 0px rgba(22, 22, 30, 1);\n\n  &:hover {\n    background: #2c9ca6;\n  }\n`;\n\nexport default {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Container, ButtonBox, Button, ImageBox } from './styles';\n\nfunction Card({ hero, handleSelectName }) {\n  const { image, options } = hero;\n  return (\n    <Container>\n      <ImageBox>\n        <img src={image} alt=\"Hero\" />\n      </ImageBox>\n      <ButtonBox>\n        {options.map(opt => (\n          <Button\n            key={opt}\n            type=\"button\"\n            onClick={() => {\n              handleSelectName(opt);\n            }}\n          >\n            {opt}\n          </Button>\n        ))}\n      </ButtonBox>\n    </Container>\n  );\n}\n\nCard.propTypes = {\n  hero: PropTypes.shape({\n    image: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n  }).isRequired,\n  handleSelectName: PropTypes.func.isRequired,\n};\n\nexport default Card;\n","import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\n\nimport GameSettings from '../../../config/gameSettings';\n\nexport const withGameLogic = Component => {\n  const WithGameLogic = props => {\n    const { timeRemaining, heroesList } = props;\n    const [currentCard, setCurrentCard] = useState(0);\n    const [score, setScore] = useState(0);\n    const [correctAnswers, setCorrectAnswers] = useState(0);\n    const history = useHistory();\n\n    useEffect(() => {\n      if (currentCard === GameSettings.numberOfCards || timeRemaining <= 0) {\n        history.push('/results', { score, correctAnswers, timeRemaining });\n      }\n    }, [currentCard, timeRemaining, score, correctAnswers, history]);\n\n    const handleSelectName = selectedName => {\n      if (selectedName === heroesList[currentCard].name) {\n        setScore(score + 20);\n        setCorrectAnswers(correctAnswers + 1);\n      }\n      setCurrentCard(currentCard + 1);\n    };\n\n    return (\n      heroesList.length > 0 &&\n      currentCard < GameSettings.numberOfCards && (\n        <Component\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...props}\n          handleSelectName={handleSelectName}\n          currentCard={heroesList[currentCard]}\n          cardIndex={currentCard + 1}\n          totalCardNumber={GameSettings.numberOfCards}\n          score={score}\n        />\n      )\n    );\n  };\n\n  WithGameLogic.propTypes = {\n    heroesList: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n        options: PropTypes.array.isRequired,\n      })\n    ).isRequired,\n    timeRemaining: PropTypes.number.isRequired,\n  };\n\n  return WithGameLogic;\n};\n\nexport default withGameLogic;\n","import axios from 'axios';\n\nconst HeroApi = axios.create({\n  baseURL: 'https://cdn.rawgit.com/akabab/superhero-api/0.2.0/api/',\n});\n\nexport default HeroApi;\n","function shuffle(__array) {\n  const array = [...__array];\n  let currentIndex = array.length;\n\n  while (currentIndex !== 0) {\n    const randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    const temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default shuffle;\n","import React, { useEffect, useState } from 'react';\n\nimport HeroApi from '../../../services/HeroApi';\nimport GameSettings from '../../../config/gameSettings';\nimport shuffle from '../../../util/shuffle';\n\nexport const withHeroesLoader = Component => {\n  const WithHeroesLoader = props => {\n    const [loading, setLoading] = useState(false);\n    const [heroesList, setHeroesList] = useState([]);\n\n    const generateCardsFromHeroes = heroes => {\n      // Get a name deferent from the hero with id 'id'\n      const getDiferentName = (index, id) => {\n        while (heroes[index].id === id) {\n          return getDiferentName(Math.floor(Math.random() * heroes.length), id);\n        }\n        return heroes[index].name;\n      };\n\n      return heroes.slice(0, GameSettings.numberOfCards).map((hero, index) => {\n        const name1 = getDiferentName(index, hero.id);\n        let name2;\n        do {\n          name2 = getDiferentName(index, hero.id);\n        } while (name2 === name1);\n\n        return {\n          id: hero.id,\n          name: hero.name,\n          options: shuffle([hero.name, name1, name2]),\n          image: hero.images.sm,\n        };\n      });\n    };\n\n    useEffect(() => {\n      const LoadHeroes = async () => {\n        setLoading(true);\n        try {\n          const { data } = await HeroApi.get('/all.json');\n          const heroes = generateCardsFromHeroes(shuffle(data));\n          setHeroesList(heroes);\n          setLoading(false);\n        } catch (err) {\n          setLoading(false);\n          setHeroesList([]);\n          console.error(err);\n        }\n      };\n      LoadHeroes();\n    }, []);\n\n    return (\n      <Component\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n        loading={loading}\n        heroesList={heroesList}\n      />\n    );\n  };\n  return WithHeroesLoader;\n};\n\nexport default withHeroesLoader;\n","import React, { useEffect, useState } from 'react';\n\nimport GameSettings from '../../../config/gameSettings';\n\nexport const withTimer = Component => {\n  const WithTimer = props => {\n    const [timeRemaining, setTimeRemaining] = useState(GameSettings.gameTime);\n\n    useEffect(() => {\n      const intervalId = setInterval(() => {\n        setTimeRemaining(timeRemaining - 1);\n      }, 1000);\n\n      return () => clearInterval(intervalId);\n    }, [timeRemaining]);\n\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    return <Component {...props} timeRemaining={timeRemaining} />;\n  };\n\n  return WithTimer;\n};\n\nexport default withTimer;\n","const compose = (...fns) => fns.reduce((f, g) => (...args) => f(g(...args)));\n\nexport default compose;\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  margin: 10px;\n  border-radius: 10px;\n  background: rgba(9, 12, 47, 1);\n  background: linear-gradient(\n    135deg,\n    rgba(9, 12, 47, 1) 0%,\n    rgba(3, 54, 54, 1) 100%\n  );\n`;\n\nexport const LoadingScreen = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n`;\n\nexport default {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Card from '../../components/Card';\nimport Navbar from '../../components/Navbar';\n\nimport { withGameLogic } from './hocs/GameLogic';\nimport { withHeroesLoader } from './hocs/HeroesLoader';\nimport { withTimer } from './hocs/Timer';\nimport compose from '../../util/compose';\n\nimport { Container, LoadingScreen } from './styles';\n\nfunction Game({\n  loading,\n  timeRemaining,\n  score,\n  currentCard,\n  handleSelectName,\n  cardIndex,\n  totalCardNumber,\n}) {\n  return (\n    <>\n      <Navbar\n        title=\"Master Heroes\"\n        inGame\n        cardIndex={cardIndex}\n        totalCardNumber={totalCardNumber}\n        score={score}\n        timeRemaining={timeRemaining}\n      />\n      <Container>\n        {loading && (\n          <LoadingScreen>\n            <h1>Loading...</h1>\n          </LoadingScreen>\n        )}\n        {!loading && (\n          <Card hero={currentCard} handleSelectName={handleSelectName} />\n        )}\n      </Container>\n    </>\n  );\n}\n\nGame.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  currentCard: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    options: PropTypes.array.isRequired,\n  }).isRequired,\n  timeRemaining: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  handleSelectName: PropTypes.func.isRequired,\n  cardIndex: PropTypes.number.isRequired,\n  totalCardNumber: PropTypes.number.isRequired,\n};\n\nexport default compose(withTimer, withHeroesLoader, withGameLogic)(Game);\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n\n  margin: 10px;\n  border-radius: 10px;\n  background: rgba(9, 12, 47, 1);\n  background: linear-gradient(\n    135deg,\n    rgba(9, 12, 47, 1) 0%,\n    rgba(3, 54, 54, 1) 100%\n  );\n\n  h1 {\n    margin-bottom: 20px;\n  }\n\n  h2 {\n    margin-bottom: 20px;\n    text-align: center;\n  }\n`;\n\nexport const ScoreContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nexport const Score = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 170px;\n  height: 70px;\n  margin: 10px;\n  padding: 10px;\n  background: #223;\n  border-radius: 8px;\n  box-shadow: 0px 0px 13px 0px rgba(22, 22, 30, 1);\n\n  img,\n  svg {\n    margin: 0 5px;\n  }\n\n  & > div {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n\n    span {\n      text-align: center;\n    }\n\n    strong {\n      text-align: center;\n    }\n  }\n`;\n\nexport const LinkButton = styled(Link)`\n  width: 200px;\n  height: 60px;\n  background: #fff;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  border-radius: 8px;\n  box-shadow: 0px 0px 13px 0px rgba(224, 224, 224, 1);\n  margin-top: 30px;\n\n  font-size: 24px;\n  font-weight: bold;\n  color: #333;\n  text-decoration: none;\n\n  img,\n  svg {\n    margin-right: 10px;\n  }\n`;\n\nexport default {};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaMedal, FaClock, FaUndo } from 'react-icons/fa';\n\nimport Navbar from '../../components/Navbar';\n\nimport { withData } from './hocs/Data';\nimport { Container, ScoreContainer, Score, LinkButton } from './styles';\nimport compose from '../../util/compose';\n\nfunction Results({\n  totalScore,\n  timeRemaining,\n  correctAnswers,\n  maximumNumberOfCards,\n}) {\n  return (\n    <>\n      <Navbar title=\"Results\" />\n      <Container>\n        <h1>Congratulations!</h1>\n        <h2>\n          You got {correctAnswers} out of {maximumNumberOfCards} heroes right.\n        </h2>\n        <ScoreContainer>\n          <Score>\n            <FaMedal size={32} />\n            <div>\n              <span>{totalScore}</span>\n              <strong>Points</strong>\n            </div>\n          </Score>\n          <Score>\n            <FaClock size={32} />\n            <div>\n              <span>\n                {timeRemaining} <strong>s</strong>\n              </span>\n              <strong>Remaining</strong>\n            </div>\n          </Score>\n        </ScoreContainer>\n        <LinkButton to=\"game\">\n          <FaUndo size={20} />\n          Restart Game!\n        </LinkButton>\n      </Container>\n    </>\n  );\n}\n\nResults.propTypes = {\n  totalScore: PropTypes.number.isRequired,\n  timeRemaining: PropTypes.number.isRequired,\n  correctAnswers: PropTypes.number.isRequired,\n  maximumNumberOfCards: PropTypes.number.isRequired,\n};\n\nexport default compose(withData)(Results);\n","import React from 'react';\nimport { useLocation } from 'react-router';\n\nimport GameSettings from '../../../config/gameSettings';\n\nexport const withData = Component => {\n  const WithData = props => {\n    const location = useLocation();\n    const { score, correctAnswers, timeRemaining } = location.state;\n    const totalScore = Math.round(\n      Number(score) +\n        Number(timeRemaining) * (correctAnswers / GameSettings.numberOfCards)\n    );\n\n    return (\n      <Component\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n        totalScore={totalScore}\n        timeRemaining={timeRemaining}\n        correctAnswers={correctAnswers}\n        maximumNumberOfCards={GameSettings.numberOfCards}\n      />\n    );\n  };\n  return WithData;\n};\n\nexport default {};\n","import React from 'react';\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\n\nimport Welcome from './pages/Welcome';\nimport Game from './pages/Game';\nimport Results from './pages/Results';\n\nfunction Routes() {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route path=\"/\" exact component={Welcome} />\n        <Route path=\"/game\" component={Game} />\n        <Route path=\"/results\" component={Results} />\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nexport default createGlobalStyle`\n  @import url('https://fonts.googleapis.com/css?family=Roboto:400,700&display=swap');\n\n  * {\n    margin: 0;\n    padding: 0;\n    outline: 0;\n    box-sizing: border-box;\n  }\n\n  html, body, #root {\n    width: 100%;\n    height: 100%;\n    font-family: 'Roboto', Arial, Helvetica, sans-serif;\n    color: #fff;\n  }\n\n  #root {\n    display: flex;\n    flex-direction: column;\n    align-content: center;\n    justify-content: center;\n    background: rgba(9,12,47,1);\n    background: linear-gradient(135deg, rgba(9,12,47,1) 0%, rgba(3,54,54,1) 100%);\n  }\n`;\n","import React from 'react';\n\nimport Routes from './routes';\nimport GlobalStyles from './styles/global';\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyles />\n      <Routes />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}